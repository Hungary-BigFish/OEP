#include<iostream>
#include<vector>
#include<fstream>

using namespace std;
//függvény hívás referenciaként átadott paraméterrel
int highestdent(vector<int>& numbers){
    bool L = false;
    int mymax=0;
    int ind=-1;
    for(int i=1;i<numbers.size();i++){
        /*if(!(numbers[i-1]>=numbers[i] && numbers[i]<=numbers[i+1]){

        }*/
        if (L && numbers[i-1]>= numbers[i] && numbers[i]<= numbers[i+1]){
            if(mymax<numbers[i]){
                mymax=numbers[i];
                ind=i;
           }
        }
        else if(!L && numbers[i-1]>= numbers[i] && numbers[i]<= numbers[i+1]){
            L=true;
            mymax=numbers[i];
            ind=i;

        }

    }
    cout << endl << mymax << " " << ind;


}

int readhights(string file,vector<int>& numbers){
    ifstream k;
    k.open(file);
    int n;
    cout << "asd";
    while(k >> n){
        numbers.push_back(n);
    }
    cout << numbers.size();
    k.close();
}

int main(){
    //vektor
    cout << "hello world!";
    vector<int> numbers ={1,2,3,4};
    /*numbers.push_back(23);
    for(int i =0 ;i<numbers.size();i++){
        cout << numbers[i] << " ";
    }*/
    numbers={};
    // fájl olvasás
    ifstream f;
    f.open("tavok.txt");
    int n;
    while(f >> n){
        numbers.push_back(n);

    }
    f.close();
    //feladat megoldása
    bool L = false;
    int mymax=0;
    int ind=-1;
    for(int i=1;i<numbers.size();i++){
        /*if(!(numbers[i-1]>=numbers[i] && numbers[i]<=numbers[i+1]){

        }*/
        if (L && numbers[i-1]>= numbers[i] && numbers[i]<= numbers[i+1]){
            if(mymax<numbers[i]){
                mymax=numbers[i];
                ind=i;
           }
        }
        else if(!L && numbers[i-1]>= numbers[i] && numbers[i]<= numbers[i+1]){
            L=true;
            mymax=numbers[i];
            ind=i;

        }

    }
    cout << endl << mymax << " " << ind;

    numbers={};
    readhights("tavok.txt",numbers);
    highestdent(numbers);

    return 0;
}
